name: Build Environments

on: [push, pull_request]

jobs:
  generate-matrix:
    name: Generate matrix for build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          JSON="{\"include\":["
          for env in eic ; do
            for os in centos7 ; do 
              # Add build to the matrix only if it is not already included
              JSONline="{\"env\": \"$env\", \"os\": \"$os\"},"
              if [[ "$JSON" != *"$JSONline"* ]]; then
                JSON="$JSON$JSONline"
              fi              
            done
          done
          
          # Remove last "," and add closing brackets
          if [[ $JSON == *, ]]; then
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"
          echo $JSON
          
          # Set output
          echo "::set-output name=matrix::$( echo "$JSON" )"

  build:
    name: Build ${{ matrix.env }} on ${{ matrix.os }}
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - name: What OS is running?
        run: uname -a
      - name: Install singularity
        run: |
          wget -O- http://neuro.debian.net/lists/focal.us-tn.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
          sudo apt-key adv --recv-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9
          sudo apt-get install -y singularity-container
      - name: Test build on ${{ matrix.os }}
        run: |
          singularity run -B /cvmfs:/cvmfs docker://electronioncollider/spack-builder:${{ matrix.os }} bash -c "spack repo add . && spack repo list && spack env create -d environments/${{ matrix.env }} && spack env activate environments/${{ matrix.env }} && spack concretize && spack install"
